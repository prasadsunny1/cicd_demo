# Note: In a yml each level is padded by 2 spaces
name: Flutter-iOS

on:
  # Runs this action when you push on master
  # push:
  #   branches: [ "master" ]
  # Runs this when a PR against master is created
  # pull_request:
  #   branches: [ "master" ]
  # Enable manual run
  workflow_dispatch:
    # inputs:
    #   lane:
    #     description: "Fastlane lane"
    #     required: true
    #     default: "beta"
    #     type: choice
    #     options:
    #       - beta
    #       - promote_to_production
    #       - production
  #  version using tags
  # push:
  #   tags:
  #     - 'v.[0-9]+.[0-9]+.[0-9]+'

jobs:
  setup_flutter_env:
    # The machine, we can also use windows-latest or macos-latest or ubuntu-latest
    runs-on: macos-latest

    steps:

      # - name: Update version number from tag
      #   run: |
      #       # Extract the version components from refs tag (e.g., 1.2.3)
      #       TAG_NAME=${GITHUB_REF#refs/tags/}
      #       VERSION=${TAG_NAME#v.} # Remove the 'v' prefix if it exists
      #       echo "FLUTTER_BUILD_NAME=$VERSION" >> $GITHUB_ENV
      #       MAJOR=$(echo $VERSION | cut -d. -f1)
      #       MINOR=$(echo $VERSION | cut -d. -f2)
      #       PATCH=$(echo $VERSION | cut -d. -f3)
      #       NUMBER=$MAJOR$MINOR$PATCH
      #       echo "FLUTTER_BUILD_NUMBER=$NUMBER" >> $GITHUB_ENV


      # Installs flutter and related dependency on this machine
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          # flutter-version: '3.16.8'

      - run: flutter doctor --version

      # Clones the project on the machine
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache flutter packages
        uses: actions/cache@v2
        with:
          path: ${{ runner.tool_cache }}/flutter
          key: deps-${{ hashFiles('**/pubspec.yaml') }}
    
      # Fetches proj dependencies from pub
      - name: Install dependencies
        run: flutter pub get

      - name: Setup Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3"
          bundler-cache: true
          working-directory: ios

      - name: Build and Deploy to TestFlight
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_PAT }}
          ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
          ASC_API_P8: ${{ secrets.ASC_KEY_P8 }}
          FLUTTER_BUILD_NAME: ${{ secrets.FLUTTER_BUILD_NAME }}
        run: |
          cd ./ios
          bundle exec fastlane ios release_beta
 
      # --build-name=$FLUTTER_BUILD_NAME --build-number=$FLUTTER_BUILD_NUMBER

      # Build and deploy with Fastlane (by default, to beta track) ðŸš€.
      # Naturally, promote_to_production only deploys.
